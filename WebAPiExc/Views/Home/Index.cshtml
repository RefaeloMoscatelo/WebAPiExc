@model  IEnumerable<Entities.Person>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th></th>
    </tr>
    <tbody id="MainPersonTableBody">
    </tbody>
</table>

<div id="formDiv">
    <div>
        <label for="DisplayName">First Name: </label>
        <input type="text" name="FirstName" id="FirstName" />
    </div>
    <div>
        <label for="Price">Last Name: </label>
        <input type="text" name="LastName" id="LastName" />
    </div>
    <div>
        <label for="Description">Email: </label>
        <input type="text" name="Email" id="Email" />
    </div>
    <div>
        <label for="Description">Phone Number: </label>
        <input type="text" name="Phone" id="Phone" />
    </div>
    <div class="btns">
        <button id="btnAdd">Add</button>
        <button id="btnUpdate">Update</button>
    </div>
</div>

<script type="text/template" id="personRow">
    <tr data-personid="${ID}">
        <td class="FirstName">${FirstName}</td>
        <td class="LastName">${LastName}</td>
        <td class="Email">${Email}</td>
        <td class="Phone">${Phone}</td>
        <td>
            <div class="delete">+</div>
        </td>
    </tr>
</script>

<!-- #region name -->
@*@foreach (var item in Model)
    {
        <tr data-personid="@item.ID">
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td class="text-nowrap"><a class="btn btn-primary text-white" href="@Url.Action("Edit", "Controller", new { ID = item.ID })"><i class="fa fa-pencil-square-o"></i>&nbsp;Edit</a>  &nbsp;&nbsp; <button value="@item.ID" class="btn btn-primary text-white delete"><i class="fa fa-trash-o"></i>&nbsp;Delete</button></td>

        </tr>
    }*@

<!-- #endregion -->

@section scripts
{
    <script>
        $(document).ready(function () {
            var selectedRow = null;
            $.getJSON("/api/People", function (result) {
                $("#personRow").tmpl(result).appendTo($("#MainPersonTableBody"));
            });
            $("#btnAdd").click(function () {
                var person = {
                    FirstName: $("#FirstName").val(),
                    LastName: $("#LastName").val(),
                    Email: $("#Email").val(),
                    Phone: $("#Phone").val()
                };
                $.ajax({
                    url: '/api/People',
                    data: JSON.stringify(person),
                    type: 'POST',
                    contentType: 'application/json',
                    success: function (result) {
                        $("#personRow").tmpl(result).appendTo($("#MainPersonTableBody"));
                    },
                    error: function (result) {
                        var errors = JSON.parse(result.responseText);
                        for (var i = 0; i < errors.length; i++) {
                            $("#" + errors[i].FieldName).css("background-color", "red").prop("title", errors[i].ErrorMsg);
                        }
                       
                    }
                });
            });
            $("#MainPersonTableBody").delegate("tr", "click", function (e) {
                e.stopPropagation();
                if (!$(this).hasClass("selectedRow")) {
                    $(".selectedRow").removeClass("selectedRow");
                    $(this).addClass("selectedRow");
                    selectedRow = $(this);
                    $("#FirstName").val($(this).find(".FirstName").html());
                    $("#LastName").val($(this).find(".LastName").html());
                    $("#Email").val($(this).find(".Email").html());
                    $("#Phone").val($(this).find(".Phone").html());
                    $("#btnUpdate").removeAttr('disabled');
                    $("#btnUpdate").prop('disabled', false);
                }
            });

            $("#btnUpdate").click(function () {
                if (selectedRow!=null) {
               
                var person = {
                    FirstName: $("#FirstName").val(),
                    LastName: $("#LastName").val(),
                    Email: $("#Email").val(),
                    Phone: $("#Phone").val()
                };
                $.ajax({
                    url: '/api/People/' + selectedRow.data("personid"),
                    data: JSON.stringify(person),
                    type: 'PUT',
                    contentType: 'application/json',
                    success: function (result) {
                        selectedRow.find(".FirstName").html(person.FirstName),
                            selectedRow.find(".LastName").html(person.LastName),
                            selectedRow.find(".Email").html(person.Email),
                            selectedRow.find(".Phone").html(person.Phone),
                            $('#formDiv input').val("");
                    },
                    error: function (result) {

                    }
                });
                }
            });

            $("#MainPersonTableBody").on("click", ".delete", function (e) {
                e.stopPropagation();
                var currentRow = $(this).closest("tr");
                var currentPersonId = currentRow.data("personid");
                var result = confirm("r u sure? personid:" + currentPersonId + ")?");
                if (result) {
                    $.ajax({
                        url: '/api/People/' + currentPersonId,
                        type: 'DELETE',
                        contentType: 'application/json',
                        success: function (result) {
                            currentRow.remove();
                        },
                        error: function (result) {

                        }
                    });
                }
            })




        });
    </script>
}